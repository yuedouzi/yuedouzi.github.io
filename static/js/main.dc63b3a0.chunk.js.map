{"version":3,"sources":["loading.svg","components/tools/Env.jsx","components/Search.jsx","components/SideBar.jsx","components/tools/Markdown.jsx","components/List.jsx","components/LoginTokenContext.jsx","components/Header.jsx","components/tools/Class.jsx","components/Login.jsx","components/Footer.jsx","components/Page.jsx","components/tools/Clipboard.jsx","components/Edit.jsx","components/View.jsx","components/NotFound.jsx","components/Add.jsx","App.js","index.js"],"names":["module","exports","blogDataApi","Search","props","useState","value","setValue","fetchSearchData","s","a","fetch","result","json","handleSetSearch","className","onSubmit","e","preventDefault","htmlFor","name","onChange","target","placeholder","required","SideBar","Md","isloading","setIsloading","HtmlContent","mdString","marked","source","HtmlReactParser","useEffect","Prism","highlightAll","List","loading","blogList","setBlogList","page","setPage","lastPage","setLastPage","searchData","setSearchData","searchCount","setSearchCount","apiInfo","setApiInfo","fetchBlogList","useCallback","count","ok","history","push","message","fetchLastPageNumber","number","Math","ceil","SearchHTML","map","item","index","key","to","_id","subject","Date","timestamp","toLocaleString","src","alt","BlogListHTML","data","role","disabled","onClick","length","LoginTokenContext","createContext","LoginStatusContext","LoginTokenProvider","last_token","username","token","setToken","Provider","children","LoginStatusProvider","loginStatus","setLoginStatus","withRouter","useContext","useCookies","cookies","removeCookie","checkToken","method","body","JSON","stringify","headers","Headers","undefined","MainClass","Login","setCookie","password","loginData","setLoginData","handleEdit","fetchUserApi","info","path","goBack","handleSubmit","autoFocus","rows","type","Footer","Page","Clipboard","textareaRef","useRef","clip","cursorPosition","navigator","clipboard","read","clipData","getType","blob","reader","FileReader","readAsDataURL","onload","base64data","getTime","imgName","blogData","valueLength","slice","handleInsertImage","ref","onKeyDown","ctrlKey","keyCode","selectionStart","handleKeyDown","Edit","copied","setCopied","now","image","setBlogData","editBlogDataApi","handleRefetch","base64str","View","slug","useParams","edit","setEdit","refetch","setRefetch","fetchBlogData","id","fetchDeleteBlogData","b","Content","handleDelete","NotFound","Add","uuid4","fetchBlogDataApi","App","CookiesProvider","exact","component","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc63b3a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.112ac8e0.svg\";","export const blogDataApi = \"http://oceanlee.cn:5001/api/blog/\"\nexport const searchApi = \"http://oceanlee.cn:5001/api/search?keyword=\"\nexport const tokenApi = 'http://oceanlee.cn:5001/api/check_token'\nexport const imgApi = 'http://oceanlee.cn:5001/api/img'\n\n","import React, { useState } from \"react\"\nimport {searchApi} from './tools/Env'\n\nconst Search = (props) => {\n\n    const [value, setValue] = useState()\n    // const [resultData, setResultData] = useState()\n\n    const handleInput = (e) => {\n        setValue(e.target.value)\n    }\n\n    const fetchSearchData = async (s) => {\n        let result = await fetch(searchApi + s)\n        result = await result.json()\n        // 父组件Sidebar函数（来自List组件）\n        props.handleSetSearch(result)\n    }\n    const handleSubmit = (e) => {\n        fetchSearchData(value)\n        e.preventDefault()\n    }\n    return (\n        <>\n            <form className=\"form-group\" onSubmit={handleSubmit}>\n                <label htmlFor=\"search\" />\n                <input className=\"form-control\" name=\"search\" onChange={handleInput} placeholder=\"search...\" required />\n            </form>\n        </>\n    )\n}\n\nexport default Search","import React from \"react\"\nimport Search from \"./Search\"\n\nconst SideBar = (props) => {\n\nreturn (\n    <aside className=\"col-md-4 blog-sidebar\">\n        <div className=\"p-3 mb-3 bg-light rounded\">\n            <h4 className=\"font-italic\">About</h4>\n            {/* { token ? <span>token: {token}</span> : '' } */}\n            <p className=\"mb-0\">这是我的笔记本 <em>兴趣是学习进步的动力</em></p>\n        </div>\n\n        <div className=\"p-3\" >\n            {/* 传递父组件函数至Search组件 */}\n            <Search handleSetSearch={props.handleSetSearch} />\n        </div>\n\n        <div className=\"p-3\">\n            <h4 className=\"font-italic\">Tag</h4>\n            <ol className=\"list-unstyled\">\n                {/* <li><a href=\"#\">GitHub</a></li> */}\n            </ol>\n        </div>\n    </aside>\n)\n}\n\nexport default SideBar ","import React, { useEffect, useState } from \"react\"\nimport marked from \"marked\"\nimport HtmlReactParser from \"html-react-parser\"\nimport Prism from \"prismjs\"\nimport 'prismjs/themes/prism-okaidia.css'\n// import 'prismjs/components/prism-handlebars.min.js'\nimport 'prismjs/components/prism-json.min.js'\nimport 'prismjs/components/prism-jsx.min.js'\nimport 'prismjs/components/prism-python.min.js'\nimport 'prismjs/components/prism-bash.min.js'\n\nconst Md = (props) => {\n\n    const [isloading, setIsloading] = useState(true)\n\n    const HtmlContent = () => {\n        // source:父组件传递过来的markdown源代码\n        let mdString = marked(props.source)\n        mdString = HtmlReactParser(mdString)\n        return (\n            <>\n                {mdString}\n            </>\n        )\n    }\n\n    useEffect(() => {\n        if (props.source) {\n            setIsloading(false)\n        }\n    }, [props.source])\n\n    //注意此处，Prism不能和其他副作用函数放到一块，否则不起作用\n    useEffect(() => {\n        Prism.highlightAll()\n    })\n\n    return (\n        <>\n            {isloading ? '' :\n                <HtmlContent />\n            }\n        </>\n    )\n}\n\nexport default Md","import React, { useEffect, useState, useCallback } from \"react\"\nimport SideBar from './SideBar'\nimport { Link } from \"react-router-dom\"\nimport Md from \"./tools/Markdown\"\nimport { blogDataApi } from \"./tools/Env\"\nimport loading from \"../loading.svg\"\n\nconst List = (props) => {\n\n\n    const [blogList, setBlogList] = useState([{ loading: true }])\n    const [page, setPage] = useState(1)\n    const [lastPage, setLastPage] = useState(1)\n    const [searchData, setSearchData] = useState([])\n    const [searchCount, setSearchCount] = useState()\n    const [apiInfo, setApiInfo] = useState()\n\n\n    const fetchBlogList = useCallback(async (count) => {\n        if (count) {\n            try {\n                let result = await fetch(blogDataApi + 'last?page=' + count)\n                if (result.ok) {\n                    result = await result.json()\n                    if (result.count === 0) {\n                        // 空数据库（没有任何blog的时候）跳转到add页面以添加\n                        props.history.push('/add')\n                    } else {\n                        setBlogList(result)\n                    }\n                }\n            } catch (err) {\n                setApiInfo(`API error(${err.message})`)\n            }\n        }\n        else {\n            fetchBlogList(1)\n        }\n    }, [props.history])\n\n    const handleNext = () => {\n        fetchBlogList(page + 1)\n        setPage(page + 1)\n    }\n    const handlePrevious = () => {\n        fetchBlogList(page - 1)\n        setPage(page - 1)\n    }\n    const fetchLastPageNumber = async () => {\n        let number = await fetch(blogDataApi + 'count')\n        number = await number.json()\n        setLastPage(Math.ceil(number.count / 10))\n    }\n\n    // set search函数，传递给子组件Sidebar\n    const handleSetSearch = (s) => {\n        setSearchData(s)\n        setSearchCount(s.length)\n        // List数据隐藏\n        setBlogList({ loading: true })\n    }\n    useEffect(() => {\n        page === 1 ? fetchBlogList() : fetchBlogList(page)\n    }, [page, fetchBlogList])\n\n    useEffect(() => {\n        fetchLastPageNumber()\n    })\n\n    const SearchHTML = () => {\n        return (\n            <>\n                {searchCount === 0 ? <h6>Not Found</h6> : \"\"}\n                {searchData.map((item, index) => {\n                    return (\n                        <div className=\"blog-post\" key={index}>\n                            <h2 className=\"blog-post-title\" ><Link to={\"/\" + item._id}>{item.subject}</Link></h2>\n                            <p className=\"blog-post-meta\">\n                                {/* 此处将item中的时间戳转化为可读模式 */}\n                                {item ? new Date(item.timestamp).toLocaleString() : <img src={loading} alt={loading} />}\n                            </p>\n                        </div>)\n                })\n                }\n            </>\n        )\n    }\n\n    const BlogListHTML = () => {\n        return (\n            <>\n                {blogList.map((item, index) => {\n                    return (\n                        <div className=\"blog-post\" key={index} >\n                            <h2 className=\"blog-post-title\" ><Link to={\"/\" + item._id}>{item.subject}</Link></h2>\n                            <p className=\"blog-post-meta\">\n                                {/* 此处将item中的时间戳转化为可读模式 */}\n                                {item.timestamp ? new Date(item.timestamp).toLocaleString() : <img src={loading} alt={loading} />}\n                            </p>\n                            <Md source={item.data} />\n                        </div>\n                    )\n                })}\n            </>\n        )\n    }\n    return (\n        <>\n            <main role=\"main\" className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 blog-main\">\n                        {/* 搜索数据列表 */}\n                        {searchData ?\n                            <SearchHTML />\n                            : <></>}\n                        <>\n                            {/* api获取信息提示 */}\n                            {apiInfo ? <h6 className=\"text-danger\">{apiInfo}</h6> :\n                                <>\n                                    {/* blog列表载入（防止在api数据未获取前渲染空html） */}\n                                    {blogList.loading ?\n                                        <></>\n                                        :\n                                        <>\n                                            <BlogListHTML />\n                                            <div className=\"blog-pagination\">\n                                                <button className=\"btn btn-outline-primary\" disabled={page === 1 ? 'disabled' : ''} onClick={handlePrevious}>Previous</button>\n                                                <button className=\"btn btn-outline-secondary\" disabled={page === lastPage ? 'disabled' : ''} onClick={handleNext}>Next</button>\n                                            </div>\n                                        </>\n                                    }\n                                </>\n                            }\n                        </>\n                    </div>\n                    <SideBar handleSetSearch={handleSetSearch} />\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default List","import React, { useState, createContext } from \"react\"\n\nexport const LoginTokenContext = createContext()\nexport const LoginStatusContext = createContext()\n\nexport const LoginTokenProvider = (props) => {\n    const [token, setToken] = useState({\n        last_token: '',\n        username: ''\n    })\n    return (\n        <LoginTokenContext.Provider value={[token, setToken]}>\n            {props.children}\n        </LoginTokenContext.Provider>\n    )\n}\n\nexport const LoginStatusProvider = (props) => {\n    const [loginStatus, setLoginStatus] = useState(false)\n    return (\n        <LoginStatusContext.Provider value={[loginStatus, setLoginStatus]}>\n            {props.children}\n        </LoginStatusContext.Provider>\n    )\n}","import React, { useContext, useEffect, useCallback, useState } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { LoginStatusContext } from \"./LoginTokenContext\"\nimport { useCookies } from \"react-cookie\"\nimport {tokenApi} from './tools/Env'\n\nconst Header = (props) => {\n    // Header包含了一个check_token的函数，用来检测token是否有效\n\n    const [loginStatus, setLoginStatus] = useContext(LoginStatusContext)\n    const [cookies, removeCookie] = useCookies('token')\n    const [apiInfo, setApiInfo] = useState()\n\n    const handleLogout = () => {\n        removeCookie('token')\n        setLoginStatus(false)\n        props.history.push('/login')\n    }\n\n    const checkToken = useCallback(async () => {\n        // api post数据并返回erorr\n        try {\n            let result = await fetch(tokenApi, {\n                method: 'POST',\n                body: JSON.stringify(cookies),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                })\n            })\n            if (result.ok) {\n                result = await result.json()\n                // console.log('Debug: Header-', result)\n                setLoginStatus(true)\n            } else {\n                setLoginStatus(false)\n                setApiInfo(`token has expired`)\n            }\n        } catch (err) {\n            setApiInfo(`API error(${err.message})`)\n        }\n    }, [cookies, setLoginStatus])\n\n\n    useEffect(() => {\n        if (cookies.token === undefined) {\n            setLoginStatus(false)\n        } else {\n            checkToken()\n        }\n    }, [cookies.token, checkToken, setLoginStatus])\n\n    return (\n        <div className=\"container\">\n            <header className=\"blog-header py-3\">\n                <div className=\"row flex-nowrap justify-content-between align-items-center\">\n                    <div className=\"col-4 text-left\">\n                        <Link className=\"blog-header-logo text-dark\" to=\"/\">Simple notebook</Link>\n                    </div>\n                    <div className=\"col-4 d-flex justify-content-end align-items-center\">\n                        {loginStatus ?\n                            <>\n                                <Link className=\"btn btn-sm text-primary\" to=\"/add\" >Add</Link>\n                                <button className=\"btn btn-sm btn-outline-secondary\" onClick={handleLogout} >Logout</button>\n                            </>\n                            :\n                            <>\n                                {apiInfo ? <span className=\"mr-4 text-danger\">{apiInfo}</span> : ''}\n                                <Link className=\"btn btn-sm btn-outline-secondary\" to=\"/login\" >Login</Link>\n                            </>\n                        }\n                    </div>\n                </div>\n            </header>\n            <div className=\"nav-scroller py-1 mb-2\">\n                <nav className=\"nav d-flex justify-content-between\">\n                    <Link className=\"p-2 text-muted\" to=\"/\">Home</Link>\n                    <Link className=\"p-2 text-muted\" to=\"/page\">Page</Link>\n                </nav>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Header)","import React from 'react'\n\nexport const MainClass = (props) => {\n    return (\n        <main role=\"main\" className=\"container\">\n            <div className=\"row\">\n                <div className=\"col blog-main\">\n                    <div className=\"blog-post\">\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport const Alert = (props) => {\n    return (\n        <div class=\"alert alert-success\">\n            <strong>{props.children}</strong>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from \"react\"\nimport { useCookies } from \"react-cookie\"\nimport { LoginTokenContext, LoginStatusContext } from \"./LoginTokenContext\"\nimport { MainClass } from './tools/Class'\n\nconst Login = (props) => {\n    const [token, setToken] = useContext(LoginTokenContext)\n    const [loginStatus, setLoginStatus] = useContext(LoginStatusContext)\n    const [cookies, setCookie] = useCookies('token')\n\n    const userApi = \"https://192.168.1.123:5000/api/user\"\n\n    const [loginData, setLoginData] = useState({\n        username: '',\n        password: ''\n    })\n\n    // 登录错误信息state,此处不能设置为对象，因为fetch error会setState为字符串\n    const [apiInfo, setApiInfo] = useState()\n\n    useEffect(() => {\n        if (loginStatus) {\n            props.history.push('/')\n        }\n    }, [loginStatus, props.history])\n\n    const handleEdit = (e) => {\n        setLoginData({\n            ...loginData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const fetchUserApi = async () => {\n        try {\n            let result = await fetch(userApi, {\n                method: 'POST',\n                body: JSON.stringify(loginData),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                })\n            })\n            // result = Response响应对象\n            if (result.ok) {\n                result = await result.json()\n                setApiInfo(result.info)\n                setToken({\n                    token: result.token,\n                    username: result.username\n                })\n                // 保存token到cookie\n                setCookie('token', result.token, { path: '/' })\n                setLoginStatus(true)\n                // 等待setLoginStatus结束后才进行goBack操作，否则会出现挂载未结束告警\n                if (loginStatus) {\n                    props.history.goBack()\n                }\n            } else {\n                result = await result.json()\n                setApiInfo(result.info)\n                props.history.push('/login')\n            }\n        } catch (err) {\n            setApiInfo(`API error(${err.message})`)\n        }\n\n    }\n    const handleSubmit = (e) => {\n        // 此处必须要分离出async异步函数，不能把该handle定义为异步函数\n        fetchUserApi()\n        e.preventDefault()\n    }\n\n    return (\n        <>\n            <MainClass>\n                <form className=\"form-signin\" onSubmit={(e) => handleSubmit(e)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\" />\n                        <input className=\"form-control\" name=\"username\" value={loginData.username} onChange={(e) => handleEdit(e)} placeholder=\"用户名\" autoFocus required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\" />\n                        <input rows=\"10\" className=\"form-control\" name=\"password\" value={loginData.password} onChange={(e) => handleEdit(e)} placeholder=\"密码\" autoFocus required />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\" >Submit\n                    </button>\n                    {apiInfo ? <span className=\"ml-4 text-danger\">{apiInfo}</span> : ''}\n                </form>\n            </MainClass>\n        </>\n    )\n}\n\nexport default Login","import React from \"react\"\n\nconst Footer = () => {\n    return (\n        <footer className=\"blog-footer\">\n            <p>notebook by react and bootstrap4</p>\n        </footer>\n    )\n}\n\nexport default Footer ","import React from 'react'\nimport {MainClass} from \"./tools/Class\"\n\nexport default function Page() {\n    return (\n        <MainClass>Page</MainClass>\n    )\n}\n","import React from \"react\"\nimport { imgApi } from \"./Env\"\nimport { useEffect } from \"react\"\nimport { useRef } from \"react\"\nimport { useState } from \"react\"\nconst Clipboard = (props) => {\n\n\n    const textareaRef = useRef()\n    // value为e.target.value数据，cursorPostion为当前光标位置，在光标位置插入剪切板数据\n    const clip = async (value, cursorPosition) => {\n        let clipData = await navigator.clipboard.read()\n        clipData = await clipData\n        const blob = await clipData[0].getType(\"image/png\")\n        const reader = new FileReader()\n        reader.readAsDataURL(blob)\n        reader.onload = () => {\n            let base64data = reader.result\n            const timestamp = new Date().getTime()\n            const imgName = `${props.blogData._id}--${timestamp}`\n            let valueLength = value.length\n            let data = value.slice(0, cursorPosition) + `![${imgName}](${imgApi}/${imgName})` + value.slice(cursorPosition, valueLength)\n            props.handleInsertImage(data, imgName, base64data)\n        }\n    }\n\n\n    const handleKeyDown = (e) => {\n        if (e.ctrlKey) {\n            if (e.keyCode === 86) {\n                let value = e.target.value\n                let cursorPosition = e.target.selectionStart\n                clip(value, cursorPosition)\n                // 此处需要处理光标位置返回问题\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"data\" />\n            <textarea ref={textareaRef} rows=\"10\" className=\"form-control\" onKeyDown={(e) => handleKeyDown(e)} name=\"data\" value={props.blogData.data} onChange={(e) => props.handleEdit(e)} placeholder=\"内容(支持markdown)\" required />\n        </div>\n    )\n}\n\nexport default Clipboard","import React, { useState } from \"react\"\nimport { useCookies } from \"react-cookie\"\nimport { blogDataApi  } from \"./tools/Env\"\nimport  Clipboard  from './tools/Clipboard'\n\nconst Edit = (props) => {\n\n    const [cookies, removeCookie] = useCookies('token')\n    const [apiInfo, setApiInfo] = useState()\n    const [copied, setCopied] = useState(false)\n    const [blogData, setBlogData] = useState({\n        _id: props._id,\n        subject: props.subject,\n        timestamp: Date.now(),\n        data: props.data,\n        image: props.image,\n        token: cookies.token\n    })\n\n    const handleEdit = (e) => {\n        setBlogData({\n            ...blogData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    // Clipboard组件将处理后的value(包含图像链接markdown代码) imgData 插入到文本框中\n    const handleInsertImage = (value, imgName, base64str) => {\n        setBlogData({\n            ...blogData,\n            data: value,\n            image: {\n                ...blogData.image,\n                [imgName]: base64str\n            }\n        })\n        setCopied(true)\n    }\n\n    const editBlogDataApi = async () => {\n        try {\n            let result = await fetch(blogDataApi + 'update', {\n                method: 'POST',\n                body: JSON.stringify(blogData),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                })\n            })\n            if (result.ok) {\n                props.handleEdit(false)\n                props.handleRefetch()\n            }\n        } catch (err) {\n            setApiInfo(`API error(${err.message})`)\n        }\n    }\n\n\n    const handleSubmit = (e) => {\n        editBlogDataApi()\n        e.preventDefault()\n    }\n    return (\n        <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"form-row\">\n                <div className=\"col-7\">\n                    <label htmlFor=\"subject\" />\n                    <input className=\"form-control\" name=\"subject\" value={blogData.subject} onChange={(e) => handleEdit(e)} required />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"data\" />\n                <Clipboard blogData={blogData} handleEdit={handleEdit} handleInsertImage={handleInsertImage} copied={copied}/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\n            <button className=\"btn btn-sm\" type=\"button\" onClick={() => props.handleEdit(false)}>Cancel</button> {/* 注意此处的type为button，否则会和form冲突 */}\n            {apiInfo ? <span className=\"ml-4 text-danger\">{apiInfo}</span> : ''}\n        </form>\n    )\n}\n\nexport default Edit\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport Edit from \"./Edit\"\nimport { MainClass } from \"./tools/Class\"\nimport { useParams } from \"react-router-dom\"\nimport Md from \"./tools/Markdown\"\nimport { useCookies } from \"react-cookie\"\nimport { LoginStatusContext } from \"./LoginTokenContext\"\nimport {blogDataApi} from \"./tools/Env\"\n\n// /blog\nconst View = (props) => {\n\n    const [cookies, removeCookie] = useCookies('token')\n    const [loginStatus, setLoginStatus] = useContext(LoginStatusContext)\n    let { slug } = useParams()\n\n    const [blogData, setBlogData] = useState({ loading: true })\n    const [edit, setEdit] = useState(false)\n    // 用来更新父组件refetch，以便useEffect重新渲染\n    const [refetch, setRefetch] = useState(false)\n    const [apiInfo, setApiInfo] = useState()\n\n    const fetchBlogData = useCallback(async (id) => {\n        try {\n            let result = await fetch(blogDataApi + id)\n            if (result.ok) {\n                result = await result.json()\n                setBlogData(result)\n            } else {\n                props.history.push('/404')\n            }\n        } catch (err) {\n            setApiInfo(`API err(${err.message})`)\n        }\n    },[props.history])\n\n    const fetchDeleteBlogData = async () => {\n        await fetch(blogDataApi + 'del', {\n            method: 'POST',\n            body: JSON.stringify({\n                _id: blogData._id,\n                token: cookies.token\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n    }\n\n    const handleDelete = (e) => {\n        fetchDeleteBlogData()\n        e.preventDefault()\n        props.history.push(\"/\")\n    }\n\n    const handleEdit = (b) => {\n        setEdit(b)\n    }\n\n    const handleRefetch = () => {\n        setRefetch(true)\n    }\n\n    useEffect(() => {\n        if (refetch) {\n            // 改回原始state，以便下次重新刷新\n            setRefetch(false)\n            fetchBlogData(slug)\n        }\n    }, [fetchBlogData, refetch, slug])\n\n    useEffect(() => {\n        fetchBlogData(slug)\n    }, [fetchBlogData, slug])\n\n    const Content = () => {\n        return (\n            <>\n                <MainClass>\n                    {blogData.loading ? '' :\n                        <>\n                            {\n                                edit ?\n                                    <Edit _id={blogData._id\n                                    } timestamp={blogData.timestamp} subject={blogData.subject} data={blogData.data} image={blogData.image} handleEdit={handleEdit} handleRefetch={handleRefetch} fetchBlogData={fetchBlogData} />\n                                    :\n                                    <>\n                                        <h2 className=\"blog-post-title\" >{blogData.subject}</h2>\n                                        <p className=\"blog-post-meta\">\n                                            {new Date(blogData.timestamp).toLocaleString()}\n                                            {loginStatus ?\n                                                <>\n                                                    <span><button className=\"btn btn-primary btn-sm\" onClick={() => handleEdit(true)}>编辑</button></span>\n                                                    <span><button className=\"btn btn-sm text-danger\" onClick={(e) => handleDelete(e)}>删除</button></span>\n                                                </>\n                                                : ''\n                                            }\n                                        </p>\n                                        <Md source={blogData.data} />\n                                    </>}\n                        </>\n                    }\n                </MainClass>\n            </>\n        )\n    }\n\n    return (\n        <>\n            {apiInfo ?\n                <MainClass><div className=\"text-danger\">{apiInfo}</div></MainClass>\n                :\n                <Content />\n            }\n        </>\n    )\n}\n\nexport default View \n","import React from 'react'\nimport { MainClass } from './tools/Class'\n\nconst NotFound = () => {\n    return (\n        <>\n            <MainClass>\n                <h1>Not Found</h1>\n            </MainClass>\n        </>\n    )\n}\n\nexport default NotFound","import React, { useState, useContext } from \"react\"\nimport { MainClass } from \"./tools/Class\"\nimport NotFound from \"./NotFound\"\nimport { v4 as uuid4 } from 'uuid'\nimport { useCookies } from \"react-cookie\"\nimport { LoginStatusContext } from \"./LoginTokenContext\"\nimport { blogDataApi } from \"./tools/Env\"\nimport Clipboard from \"./tools/Clipboard\"\n\nconst Add = (props) => {\n\n    const [loginStatus, setLoginStatus] = useContext(LoginStatusContext)\n    const [cookies, removeCookie] = useCookies('token')\n    const _id = uuid4()\n\n    const [blogData, setBlogData] = useState({\n        _id: _id,\n        subject: '',\n        timestamp: Date.now(),\n        data: '',\n        image: {},\n        token: cookies.token\n    })\n\n    const [apiInfo, setApiInfo] = useState()\n\n    const handleEdit = (e) => {\n        setBlogData({\n            ...blogData,\n            [e.target.name]: e.target.value\n        })\n    }\n    // Clipboard组件将imgData markdown代码插入到文本框中\n    const handleInsertImage = (value, imgName, base64str) => {\n        setBlogData({\n            ...blogData,\n            data: value,\n            image: {\n                ...blogData.image,\n                [imgName]: base64str\n            }\n        })\n    }\n\n    const fetchBlogDataApi = async () => {\n        try {\n            let result = await fetch(blogDataApi + 'add', {\n                method: 'POST',\n                body: JSON.stringify(blogData),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                })\n            })\n            if (result.ok) {\n                result = await result.json()\n                props.history.push('/' + blogData._id)\n            }\n        } catch (err) {\n            setApiInfo(`API err(${err.message})`)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        fetchBlogDataApi()\n        e.preventDefault()\n    }\n\n    return (\n        <>\n            {loginStatus ?\n                <>\n                    <MainClass>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subject\" />\n                                <input className=\"form-control\" name=\"subject\" value={blogData.subject} onChange={(e) => handleEdit(e)} placeholder=\"标题\" required />\n                            </div>\n                            <Clipboard blogData={blogData} handleEdit={handleEdit} handleInsertImage={handleInsertImage} />\n                            <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\n                            <button className=\"btn btn-sm\" >Cancel</button>\n                            {apiInfo ? <span className=\"ml-4 text-danger\">{apiInfo}</span> : ''}\n                        </form>\n                    </MainClass>\n                </>\n                :\n                <NotFound />\n            }\n        </>\n    )\n}\n\nexport default Add ","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\nimport './blog.css'\nimport List from \"./components/List\"\nimport Header from \"./components/Header\"\nimport Login from \"./components/Login\"\nimport Footer from \"./components/Footer\"\nimport Page from \"./components/Page\"\nimport View from './components/View'\nimport Add from './components/Add'\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\"\nimport { LoginTokenProvider, LoginStatusProvider } from \"./components/LoginTokenContext\"\nimport { CookiesProvider } from \"react-cookie\"\nimport NotFound from './components/NotFound';\n\nconst App = () => {\n\n  return (\n    <CookiesProvider>\n      <Router>\n        <LoginTokenProvider>\n          <LoginStatusProvider>\n            <Header />\n            <Switch>\n              <Route exact path=\"/page\" component={Page} />\n              <Route exact path=\"/add\" component={Add} />\n              <Route exact path=\"/\" component={List} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/404\" component={NotFound} />\n              {/* 此处注意排序 */}\n              <Route exact path=\"/:slug\" component={View} />\n            </Switch>\n            <Footer />\n          </LoginStatusProvider>\n        </LoginTokenProvider>\n      </Router>\n    </CookiesProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\ndocument.title = 'Simple notebook'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}